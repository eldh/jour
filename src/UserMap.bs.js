// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Map$Credt from "credt/library/Map.bs.js";
import * as Util$Credt from "credt/library/Util.bs.js";
import * as CredtMapContext from "./CredtMapContext.bs.js";

function getId(u) {
  return u.id;
}

var moduleId = Util$Credt.idOfString("UserMap");

function reducer(user, email) {
  if (typeof email === "number") {
    if (email === /* IncreaseAge */0) {
      return [
              {
                id: user.id,
                name: user.name,
                email: user.email,
                age: user.age + 1 | 0
              },
              /* DecreaseAge */1
            ];
    } else {
      return [
              {
                id: user.id,
                name: user.name,
                email: user.email,
                age: user.age - 1 | 0
              },
              /* IncreaseAge */0
            ];
    }
  }
  switch (email.TAG | 0) {
    case /* SetEmail */0 :
        return [
                {
                  id: user.id,
                  name: user.name,
                  email: email._0,
                  age: user.age
                },
                {
                  TAG: /* SetEmail */0,
                  _0: user.email
                }
              ];
    case /* SetName */1 :
        return [
                {
                  id: user.id,
                  name: email._0,
                  email: user.email,
                  age: user.age
                },
                {
                  TAG: /* SetName */1,
                  _0: user.name
                }
              ];
    case /* SetAge */2 :
        return [
                {
                  id: user.id,
                  name: user.name,
                  email: user.email,
                  age: email._0
                },
                {
                  TAG: /* SetAge */2,
                  _0: user.age
                }
              ];
    
  }
}

var Config = {
  getId: getId,
  moduleId: moduleId,
  reducer: reducer
};

var include = Map$Credt.Make({
      moduleId: moduleId,
      getId: getId,
      reducer: reducer
    });

var apply = include.apply;

var instance = include.instance;

function makeUser(i) {
  return {
          id: Util$Credt.makeId(undefined),
          name: "Name" + String(i),
          email: "email@" + String(i),
          age: (i << 1)
        };
}

var baseUser = makeUser(1);

var Context = CredtMapContext.Make({
      instance: instance
    });

Curry._1(apply, {
      hd: {
        TAG: /* Add */0,
        _0: baseUser
      },
      tl: /* [] */0
    });

var mapRemove = include.mapRemove;

var mapFind = include.mapFind;

var internalId = include.internalId;

var wrapper = include.wrapper;

var getSnapshot = include.getSnapshot;

var get = include.get;

var getExn = include.getExn;

var changeListeners = include.changeListeners;

var addChangeListener = include.addChangeListener;

var removeChangeListener = include.removeChangeListener;

var callChangeListeners = include.callChangeListeners;

var handleOperation = include.handleOperation;

var setMap = include.setMap;

var baseApply = include.baseApply;

var applyRemoteOperations = include.applyRemoteOperations;

var addToTransaction = include.addToTransaction;

var __resetCollection__ = include.__resetCollection__;

var toList = include.toList;

export {
  Config ,
  mapRemove ,
  mapFind ,
  internalId ,
  wrapper ,
  getSnapshot ,
  get ,
  getExn ,
  changeListeners ,
  addChangeListener ,
  removeChangeListener ,
  callChangeListeners ,
  handleOperation ,
  setMap ,
  baseApply ,
  applyRemoteOperations ,
  apply ,
  addToTransaction ,
  __resetCollection__ ,
  toList ,
  instance ,
  makeUser ,
  baseUser ,
  Context ,
  
}
/* moduleId Not a pure module */
