// Generated by ReScript, PLEASE EDIT WITH CARE

import * as S from "./S.bs.js";
import * as Core from "./Core.bs.js";
import * as View from "./View.bs.js";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function getBoxStyle(position_, align_, alignSelf_, alignContent_, backgroundColor_, grow_, basis_, wrap_, zIndex_, shrink_, justify_, direction_, padding_, margin_, marginBottom_, marginTop_, marginLeft_, marginRight_, paddingBottom_, paddingTop_, paddingLeft_, paddingRight_, height_, width_, maxWidth_, overflow_, borderRadius_, param) {
  return S.make({
              hd: S.width(width_),
              tl: {
                hd: S.maxWidth(maxWidth_),
                tl: {
                  hd: S.position(position_),
                  tl: {
                    hd: S.padding(padding_),
                    tl: {
                      hd: S.margin(margin_),
                      tl: {
                        hd: S.marginBottom(marginBottom_),
                        tl: {
                          hd: S.marginTop(marginTop_),
                          tl: {
                            hd: S.marginLeft(marginLeft_),
                            tl: {
                              hd: S.marginRight(marginRight_),
                              tl: {
                                hd: S.paddingBottom(paddingBottom_),
                                tl: {
                                  hd: S.paddingTop(paddingTop_),
                                  tl: {
                                    hd: S.paddingLeft(paddingLeft_),
                                    tl: {
                                      hd: S.paddingRight(paddingRight_),
                                      tl: {
                                        hd: S.alignSelf(alignSelf_),
                                        tl: {
                                          hd: S.alignItems(align_),
                                          tl: {
                                            hd: S.backgroundColor(backgroundColor_),
                                            tl: {
                                              hd: S.alignContent(alignContent_),
                                              tl: {
                                                hd: S.height(height_),
                                                tl: {
                                                  hd: S.overflow(overflow_),
                                                  tl: {
                                                    hd: S.borderRadius(borderRadius_),
                                                    tl: {
                                                      hd: S.flexShrink(shrink_),
                                                      tl: {
                                                        hd: S.flexBasis(basis_),
                                                        tl: {
                                                          hd: S.flexDirection(direction_),
                                                          tl: {
                                                            hd: S.flexGrow(grow_),
                                                            tl: {
                                                              hd: S.flexWrap(wrap_),
                                                              tl: {
                                                                hd: S.zIndex(Belt_Option.getWithDefault(zIndex_, 0)),
                                                                tl: {
                                                                  hd: S.justifyContent(justify_),
                                                                  tl: /* [] */0
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            });
}

function Box(Props) {
  var positionOpt = Props.position;
  var alignOpt = Props.align;
  var alignSelfOpt = Props.alignSelf;
  var alignContentOpt = Props.alignContent;
  var backgroundColorOpt = Props.backgroundColor;
  var growOpt = Props.grow;
  var zIndex = Props.zIndex;
  var wrapOpt = Props.wrap;
  var shrinkOpt = Props.shrink;
  var basisOpt = Props.basis;
  var justifyOpt = Props.justify;
  var directionOpt = Props.direction;
  var padding = Props.padding;
  var margin = Props.margin;
  var marginBottom = Props.marginBottom;
  var marginTop = Props.marginTop;
  var marginLeft = Props.marginLeft;
  var marginRight = Props.marginRight;
  var paddingBottom = Props.paddingBottom;
  var paddingTop = Props.paddingTop;
  var paddingLeft = Props.paddingLeft;
  var paddingRight = Props.paddingRight;
  var heightOpt = Props.height;
  var widthOpt = Props.width;
  var maxWidthOpt = Props.maxWidth;
  var overflowOpt = Props.overflow;
  var borderRadiusOpt = Props.borderRadius;
  var children = Props.children;
  var position = positionOpt !== undefined ? positionOpt : "relative";
  var align = alignOpt !== undefined ? alignOpt : "flexStart";
  var alignSelf = alignSelfOpt !== undefined ? alignSelfOpt : "auto";
  var alignContent = alignContentOpt !== undefined ? alignContentOpt : "flexStart";
  var backgroundColor = backgroundColorOpt !== undefined ? backgroundColorOpt : "transparent";
  var grow = growOpt !== undefined ? growOpt : 1;
  var wrap = wrapOpt !== undefined ? wrapOpt : "wrap";
  var shrink = shrinkOpt !== undefined ? shrinkOpt : 0;
  var basis = basisOpt !== undefined ? basisOpt : "auto";
  var justify = justifyOpt !== undefined ? justifyOpt : "flexStart";
  var direction = directionOpt !== undefined ? directionOpt : "column";
  var height = heightOpt !== undefined ? heightOpt : "auto";
  var width = widthOpt !== undefined ? widthOpt : "auto";
  var maxWidth = maxWidthOpt !== undefined ? maxWidthOpt : "auto";
  var overflow = overflowOpt !== undefined ? overflowOpt : "scroll";
  var borderRadius = borderRadiusOpt !== undefined ? borderRadiusOpt : "none";
  var style = getBoxStyle(position, align, alignSelf, alignContent, backgroundColor, grow, basis, wrap, zIndex, shrink, justify, direction, padding, margin, marginBottom, marginTop, marginLeft, marginRight, paddingBottom, paddingTop, paddingLeft, paddingRight, height, width, maxWidth, overflow, borderRadius, undefined);
  return React.createElement(Core.BackgroundColorContext.Provider.make, {
              value: backgroundColor,
              children: React.createElement(View.make, {
                    style: style,
                    children: children
                  })
            });
}

var make = Box;

export {
  getBoxStyle ,
  make ,
  
}
/* S Not a pure module */
