// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Promise from "reason-promise/src/js/promise.bs.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ReactNativeFs from "react-native-fs";

function readDir(v) {
  return $$Promise.Js.toResult(ReactNativeFs.readDir(v));
}

function readFile(v) {
  return $$Promise.Js.toResult(ReactNativeFs.readFile(v));
}

function readFileWithOptions(v, o) {
  return $$Promise.Js.toResult(ReactNativeFs.readFile(v, o));
}

function stat(v) {
  return $$Promise.Js.toResult(ReactNativeFs.stat(v));
}

function mkdir(v) {
  return $$Promise.Js.toResult(ReactNativeFs.mkdir(v));
}

function writeFile(filepath, contents, encodingOrOptions, param) {
  return $$Promise.Js.toResult(ReactNativeFs.writeFile(filepath, contents, encodingOrOptions !== undefined ? Caml_option.valFromOption(encodingOrOptions) : undefined));
}

function appendFile(filepath, contents, encodingOrOptions, param) {
  return $$Promise.Js.toResult(ReactNativeFs.appendFile(filepath, contents, encodingOrOptions !== undefined ? Caml_option.valFromOption(encodingOrOptions) : undefined));
}

function write(filepath, contents, position, encodingOrOptions, param) {
  return $$Promise.Js.toResult(ReactNativeFs.write(filepath, contents, position, encodingOrOptions !== undefined ? Caml_option.valFromOption(encodingOrOptions) : undefined));
}

export {
  readDir ,
  readFile ,
  readFileWithOptions ,
  stat ,
  mkdir ,
  writeFile ,
  appendFile ,
  write ,
  
}
/* Promise Not a pure module */
