// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List$Credt from "credt/library/List.bs.js";
import * as Util$Credt from "credt/library/Util.bs.js";
import * as CredtListContext from "./CredtListContext.bs.js";

function getId(u) {
  return u.id;
}

var moduleId = Util$Credt.idOfString("DiaryList");

function reducer(entry, date) {
  if (date.TAG) {
    return [
            {
              id: entry.id,
              date: entry.date,
              content: date._0
            },
            {
              TAG: /* SetContent */1,
              _0: entry.content
            }
          ];
  } else {
    return [
            {
              id: entry.id,
              date: date._0,
              content: entry.content
            },
            {
              TAG: /* SetDate */0,
              _0: entry.date
            }
          ];
  }
}

var Config = {
  getId: getId,
  moduleId: moduleId,
  reducer: reducer
};

function makeEntry(date, content) {
  return {
          id: Util$Credt.makeId(undefined),
          date: date,
          content: content
        };
}

var include = List$Credt.Make({
      moduleId: moduleId,
      getId: getId,
      reducer: reducer
    });

function getId$1(o) {
  return o.id;
}

var moduleId$1 = Util$Credt.idOfString("DiaryList");

var Context = CredtListContext.Make({
      moduleId: moduleId$1,
      getId: getId$1,
      reducer: reducer
    });

var string_of_operation = include.string_of_operation;

var internalId = include.internalId;

var wrapper = include.wrapper;

var getSnapshot = include.getSnapshot;

var get = include.get;

var getExn = include.getExn;

var setData = include.setData;

var changeListeners = include.changeListeners;

var addChangeListener = include.addChangeListener;

var removeChangeListener = include.removeChangeListener;

var callChangeListeners = include.callChangeListeners;

var handleOperation = include.handleOperation;

var baseApply = include.baseApply;

var applyRemoteOperations = include.applyRemoteOperations;

var apply = include.apply;

var addToTransaction = include.addToTransaction;

var length = include.length;

var __resetCollection__ = include.__resetCollection__;

var instance = include.instance;

export {
  Config ,
  makeEntry ,
  string_of_operation ,
  internalId ,
  wrapper ,
  getSnapshot ,
  get ,
  getExn ,
  setData ,
  changeListeners ,
  addChangeListener ,
  removeChangeListener ,
  callChangeListeners ,
  handleOperation ,
  baseApply ,
  applyRemoteOperations ,
  apply ,
  addToTransaction ,
  length ,
  __resetCollection__ ,
  instance ,
  Context ,
  
}
/* moduleId Not a pure module */
