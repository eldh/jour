// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.mjs";
import * as React from "react";
import * as List$Credt from "credt/library/List.bs.js";
import * as Util$Credt from "credt/library/Util.bs.js";

function getId(u) {
  return u.id;
}

var moduleId = Util$Credt.idOfString("DiaryList");

function reducer(entry, x) {
  return [
          {
            id: entry.id,
            date: x._0
          },
          /* SetDate */{
            _0: entry.date
          }
        ];
}

var Config = {
  getId: getId,
  moduleId: moduleId,
  reducer: reducer
};

function makeEntry(name, date) {
  return {
          id: Util$Credt.idOfString(name),
          date: date
        };
}

var include = List$Credt.Make({
      moduleId: moduleId,
      getId: getId,
      reducer: reducer
    });

var removeChangeListener = include.removeChangeListener;

var instance = include.instance;

function use(param) {
  var match = React.useReducer((function (c, param) {
          return c + 1 | 0;
        }), 0);
  var forceUpdate = match[1];
  var valRef = React.useRef(Curry._1(instance.getSnapshot, undefined));
  React.useEffect((function () {
          var listener = function (_ops) {
            valRef.current = Curry._1(instance.getSnapshot, undefined);
            return Curry._1(forceUpdate, undefined);
          };
          Curry._1(instance.addChangeListener, listener);
          return (function (param) {
                    return Curry._1(removeChangeListener, listener);
                  });
        }), []);
  return valRef.current;
}

var string_of_operation = include.string_of_operation;

var internalId = include.internalId;

var wrapper = include.wrapper;

var getSnapshot = include.getSnapshot;

var get = include.get;

var getExn = include.getExn;

var setData = include.setData;

var changeListeners = include.changeListeners;

var addChangeListener = include.addChangeListener;

var callChangeListeners = include.callChangeListeners;

var handleOperation = include.handleOperation;

var baseApply = include.baseApply;

var applyRemoteOperations = include.applyRemoteOperations;

var apply = include.apply;

var addToTransaction = include.addToTransaction;

var length = include.length;

var __resetCollection__ = include.__resetCollection__;

export {
  Config ,
  makeEntry ,
  string_of_operation ,
  internalId ,
  wrapper ,
  getSnapshot ,
  get ,
  getExn ,
  setData ,
  changeListeners ,
  addChangeListener ,
  removeChangeListener ,
  callChangeListeners ,
  handleOperation ,
  baseApply ,
  applyRemoteOperations ,
  apply ,
  addToTransaction ,
  length ,
  __resetCollection__ ,
  instance ,
  use ,
  
}
/* moduleId Not a pure module */
