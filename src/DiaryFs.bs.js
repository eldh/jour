// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Fs from "./Fs.bs.js";
import * as $$String from "bs-platform/lib/es6/string.js";
import * as $$Promise from "reason-promise/src/js/promise.js";
import * as DateFns from "date-fns";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as ReactNativeFs from "react-native-fs";

var diaryFolder = ReactNativeFs.DocumentDirectoryPath + "/.diary";

function ensureFolderExists(folder) {
  return $$Promise.flatMap(ReactNativeFs.exists(folder), (function (exists) {
                if (exists) {
                  return $$Promise.resolved({
                              TAG: /* Ok */0,
                              _0: undefined
                            });
                } else {
                  return Fs.mkdir(folder);
                }
              }));
}

function writeToFile(file, contents, folderOpt, param) {
  var folder = folderOpt !== undefined ? folderOpt : diaryFolder;
  return $$Promise.flatMapOk(ensureFolderExists(folder), (function (param) {
                console.log("ok", "ok");
                return Fs.writeFile(folder + ("/" + file), contents, undefined, undefined);
              }));
}

function getFilenameForDate(d) {
  return DateFns.format(d, "yyyy-MM-dd") + ".md";
}

function filenameToDate(str) {
  var year = $$String.sub(str, 0, 4);
  var month = $$String.sub(str, 5, 2);
  var day = $$String.sub(str, 8, 2);
  return new Date([
                year,
                month,
                day
              ].join("-"));
}

function createEntryFromReadDirInfo(entry) {
  return [
          entry.name,
          filenameToDate(entry.name)
        ];
}

function getDiaryEntries(param) {
  return $$Promise.mapOk(Fs.readDir(ReactNativeFs.DocumentDirectoryPath + "/.diary"), (function (entries) {
                return Belt_Array.map(entries, createEntryFromReadDirInfo);
              }));
}

function writeDiaryToFs(date, contents, param) {
  return writeToFile("test-" + getFilenameForDate(date), contents, undefined, undefined);
}

export {
  diaryFolder ,
  ensureFolderExists ,
  writeToFile ,
  getFilenameForDate ,
  filenameToDate ,
  createEntryFromReadDirInfo ,
  getDiaryEntries ,
  writeDiaryToFs ,
  
}
/* diaryFolder Not a pure module */
